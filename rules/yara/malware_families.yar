/*
YARA Rules for Common Malware Families
SentinelAI v2 Detection Rules
*/

rule WannaCry_Ransomware
{
    meta:
        description = "Detects WannaCry ransomware indicators"
        author = "SentinelAI"
        severity = "critical"
        family = "ransomware"
        
    strings:
        $s1 = "Wana Decrypt0r" nocase
        $s2 = "WANNACRY" nocase
        $s3 = ".WNCRY" nocase
        $s4 = "tasksche.exe"
        $s5 = "@WanaDecryptor@.exe"
        
    condition:
        any of them
}

rule Emotet_Banking_Trojan
{
    meta:
        description = "Detects Emotet banking trojan"
        author = "SentinelAI"
        severity = "critical"
        family = "banking_trojan"
        
    strings:
        $s1 = "RegOpenKeyExW" wide
        $s2 = "RegQueryValueExW" wide
        $s3 = "GetSystemDirectoryW" wide
        $s4 = { 8B 45 ?? 8B 4D ?? 8A 14 01 80 F2 ?? 88 14 01 }
        
    condition:
        3 of them
}

rule Mirai_Botnet
{
    meta:
        description = "Detects Mirai botnet malware"
        author = "SentinelAI"
        severity = "high"
        family = "botnet"
        
    strings:
        $s1 = "/bin/busybox MIRAI"
        $s2 = "MIRAI: applet not found"
        $s3 = "enable\x00system\x00sh\x00"
        $s4 = "TSource Engine Query"
        
    condition:
        any of them
}

rule Generic_Keylogger
{
    meta:
        description = "Detects generic keylogger patterns"
        author = "SentinelAI"
        severity = "high"
        family = "keylogger"
        
    strings:
        $api1 = "GetAsyncKeyState" nocase
        $api2 = "SetWindowsHookEx" nocase
        $api3 = "GetKeyState" nocase
        $log1 = "keylog" nocase
        $log2 = "keystroke" nocase
        $log3 = "key_log" nocase
        
    condition:
        any of ($api*) and any of ($log*)
}

rule Suspicious_PowerShell
{
    meta:
        description = "Detects suspicious PowerShell usage"
        author = "SentinelAI"
        severity = "medium"
        family = "script"
        
    strings:
        $ps1 = "powershell.exe -enc" nocase
        $ps2 = "powershell -e " nocase
        $ps3 = "powershell -w hidden" nocase
        $ps4 = "powershell -windowstyle hidden" nocase
        $download = "downloadstring" nocase
        $invoke = "invoke-expression" nocase
        $bypass = "-executionpolicy bypass" nocase
        
    condition:
        any of ($ps*) or ($download and $invoke) or $bypass
}

rule Cryptocurrency_Miner
{
    meta:
        description = "Detects cryptocurrency mining malware"
        author = "SentinelAI"
        severity = "medium"
        family = "miner"
        
    strings:
        $pool1 = "stratum+tcp://" nocase
        $pool2 = "pool.minergate.com" nocase
        $pool3 = "xmr-" nocase
        $miner1 = "xmrig" nocase
        $miner2 = "cpuminer" nocase
        $miner3 = "minerd" nocase
        $coin1 = "monero" nocase
        $coin2 = "bitcoin" nocase
        
    condition:
        any of ($pool*) or any of ($miner*) or (any of ($coin*) and any of ($pool*))
}

rule RAT_Remote_Access
{
    meta:
        description = "Detects Remote Access Trojan patterns"
        author = "SentinelAI"
        severity = "high"
        family = "rat"
        
    strings:
        $rat1 = "njRAT" nocase
        $rat2 = "DarkComet" nocase
        $rat3 = "Poison Ivy" nocase
        $rat4 = "RemoteAdmin" nocase
        $func1 = "GetDesktopWindow" nocase
        $func2 = "keybd_event" nocase
        $func3 = "mouse_event" nocase
        $net1 = "WSAStartup" nocase
        $net2 = "connect" nocase
        
    condition:
        any of ($rat*) or (2 of ($func*) and any of ($net*))
}

rule Suspicious_Packed_Executable
{
    meta:
        description = "Detects packed/obfuscated executables"
        author = "SentinelAI"
        severity = "medium"
        family = "packer"
        
    strings:
        $upx = "UPX!" at 0
        $mz = { 4D 5A }
        $pe = "PE\x00\x00"
        $packer1 = "This program cannot be run in DOS mode" nocase
        $packer2 = "This program must be run under Win32" nocase
        
    condition:
        $mz at 0 and $pe and ($upx or any of ($packer*))
}

rule Suspicious_Registry_Modification
{
    meta:
        description = "Detects suspicious registry modifications"
        author = "SentinelAI"
        severity = "medium"
        family = "persistence"
        
    strings:
        $reg1 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run" nocase
        $reg2 = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce" nocase
        $reg3 = "SYSTEM\\CurrentControlSet\\Services" nocase
        $api1 = "RegCreateKeyEx" nocase
        $api2 = "RegSetValueEx" nocase
        
    condition:
        any of ($reg*) and any of ($api*)
}

rule Fileless_Malware_Indicators
{
    meta:
        description = "Detects fileless malware indicators"
        author = "SentinelAI"
        severity = "high"
        family = "fileless"
        
    strings:
        $wmi1 = "Win32_Process" nocase
        $wmi2 = "Create" nocase
        $ps1 = "powershell" nocase
        $mem1 = "VirtualAlloc" nocase
        $mem2 = "WriteProcessMemory" nocase
        $mem3 = "CreateRemoteThread" nocase
        $inject1 = "NtUnmapViewOfSection" nocase
        $inject2 = "ZwUnmapViewOfSection" nocase
        
    condition:
        ($wmi1 and $wmi2 and $ps1) or (2 of ($mem*)) or any of ($inject*)
}
